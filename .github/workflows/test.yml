name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install pytest pytest-cov
    
    - name: Run linter on test files
      run: |
        python -m antlr_v4_linter.cli.main lint test_grammar.g4 || true
        python -m antlr_v4_linter.cli.main lint test_lexer_modes.g4 || true
        python -m antlr_v4_linter.cli.main lint test_antlr4.g4 || true
    
    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=src/antlr_v4_linter --cov-report=term-missing || echo "No tests directory yet"
    
    - name: Check import
      run: |
        python -c "from antlr_v4_linter import __version__; print(f'Version: {__version__}')"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black isort flake8 mypy
    
    - name: Run black
      run: black --check src/ || echo "Black formatting check (non-blocking)"
    
    - name: Run isort
      run: isort --check-only src/ || echo "Import sorting check (non-blocking)"
    
    - name: Run flake8
      run: flake8 src/ --max-line-length=88 --extend-ignore=E203,W503 || echo "Flake8 check (non-blocking)"
    
    - name: Run mypy
      run: mypy src/ || echo "Type checking (non-blocking)"